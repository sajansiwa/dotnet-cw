@page "/change-password"

<nav class="changePasswordHeader">
    <h1 class="Heading">Change Password</h1>
</nav>

    <div class="form-container">
        @if (_globalState.CurrentUser != null && _globalState.CurrentUser.HasInitialPassword)
        {
            <AlertMessage Type="warning" Message="You are using the initial password. Please change it." />
        }
        <form class="form" @onsubmit="ChangePasswordHandler">
            <div class="input">
            <input type="password" class="inputField" @bind="_currentPassword"
                    placeholder="Current Password" />

            </div>
            <div class="input">
                <input type="password" class="inputField" @bind="_newPassword"
                    placeholder="New Password" />

            </div>
            @if (!string.IsNullOrEmpty(_successMessage))
            {
                <AlertMessage Type="success" Message="@_successMessage" />
            }
            else if (!string.IsNullOrEmpty(_errorMessage))
            {
                <AlertMessage Type="danger" Message="@_errorMessage" />
            }
            <button class="submitButton" type="submit">
                <span class="oi oi-check"></span> Submit
            </button>
        </form>
    </div>


@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private string _currentPassword { get; set; }
    private string _newPassword { get; set; }
    private string _errorMessage = "";
    private string _successMessage = "";
    protected override void OnInitialized()
    {
        _errorMessage = "";
        _successMessage = "";
    }

    private void ChangePasswordHandler()
    {
        try
        {
            _errorMessage = "";
            _successMessage = "";
            _globalState.CurrentUser = UsersService.ChangePassword(_globalState.CurrentUser.Id, _currentPassword, _newPassword);
            _currentPassword = "";
            _newPassword = "";
            _successMessage = "The password has been changed successfully.";
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
            Console.WriteLine(e);
        }
    }
}
